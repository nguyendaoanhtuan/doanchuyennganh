// <auto-generated />
using System;
using HTQuanLyHoSoSucKhoe.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HTQuanLyHoSoSucKhoe.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HTQuanLyHoSoSucKhoe.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Appointment_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("BenhVienId")
                        .HasColumnType("int");

                    b.Property<int?>("BenhVienId1")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenBenhVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BenhVienId");

                    b.HasIndex("BenhVienId1");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("appointments", (string)null);
                });

            modelBuilder.Entity("HTQuanLyHoSoSucKhoe.Models.BenhVien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ChuyenKhoa")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image_Path")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone_Number")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BenhVien");
                });

            modelBuilder.Entity("HTQuanLyHoSoSucKhoe.Models.ChuyenKhoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BenhVienId")
                        .HasColumnType("int");

                    b.Property<int?>("BenhVienId1")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("BenhVienId");

                    b.HasIndex("BenhVienId1");

                    b.ToTable("ChuyenKhoas");
                });

            modelBuilder.Entity("HTQuanLyHoSoSucKhoe.Models.TKBenhVien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BenhVienId")
                        .HasColumnType("int");

                    b.Property<string>("Matkhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Taikhoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BenhVienId");

                    b.ToTable("TKBenhVien");
                });

            modelBuilder.Entity("HTQuanLyHoSoSucKhoe.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cccd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Phone_Number")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HTQuanLyHoSoSucKhoe.Models.Appointment", b =>
                {
                    b.HasOne("HTQuanLyHoSoSucKhoe.Models.BenhVien", "BenhVien")
                        .WithMany()
                        .HasForeignKey("BenhVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HTQuanLyHoSoSucKhoe.Models.BenhVien", null)
                        .WithMany("Appointments")
                        .HasForeignKey("BenhVienId1");

                    b.HasOne("HTQuanLyHoSoSucKhoe.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HTQuanLyHoSoSucKhoe.Models.User", null)
                        .WithMany("Appointments")
                        .HasForeignKey("UserId1");

                    b.Navigation("BenhVien");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HTQuanLyHoSoSucKhoe.Models.ChuyenKhoa", b =>
                {
                    b.HasOne("HTQuanLyHoSoSucKhoe.Models.BenhVien", "BenhVien")
                        .WithMany()
                        .HasForeignKey("BenhVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HTQuanLyHoSoSucKhoe.Models.BenhVien", null)
                        .WithMany("ChuyenKhoas")
                        .HasForeignKey("BenhVienId1");

                    b.Navigation("BenhVien");
                });

            modelBuilder.Entity("HTQuanLyHoSoSucKhoe.Models.TKBenhVien", b =>
                {
                    b.HasOne("HTQuanLyHoSoSucKhoe.Models.BenhVien", "BenhVien")
                        .WithMany()
                        .HasForeignKey("BenhVienId");

                    b.Navigation("BenhVien");
                });

            modelBuilder.Entity("HTQuanLyHoSoSucKhoe.Models.BenhVien", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("ChuyenKhoas");
                });

            modelBuilder.Entity("HTQuanLyHoSoSucKhoe.Models.User", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
